{"version":3,"sources":["components/games/snake/constants/constants.js","components/games/snake/components/SnakeBoard.js","components/games/snake/components/SnakeBody.js","components/games/snake/components/Food.js","components/slider/Slider.js","components/games/snake/actions/actions.js","components/games/snake/utils/index.js","components/games/snake/components/SnakeGame.js","components/games/snake/reducers/snake-reducer.js","components/games/snake/reducers/food-reducer.js","components/games/snake/reducers/game-reducer.js","components/games/snake/reducers/slider-reducer.js","components/games/snake/reducers/reducers.js","components/games/snake/components/SnakeGameProvider.js","components/homepage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["MAX_GAME_SPEED","SQUARE_SIZE","INITIAL_DIRECTION","Board","props","board","x","size","y","style","width","height","react_default","a","createElement","className","align","map","row","column","key","cell","cellIndex","SnakeBody","coords","index","left","top","background","lost","Food","Slider","handleChange","value","e","_this","onChange","preventDefault","this","label","lib_default","orientation","min","minValue","max","maxValue","tooltip","Component","moveSnake","snake","direction","slice","headCoords","length","headMap","DOWN","UP","LEFT","RIGHT","push","shift","type","setFood","food","setDirection","prependSnake","newGame","loseGame","incrementScore","changeBoardSize","boardSize","changeGameSpeed","speed","slider","checkCollision","matchCoords","arrCoords","some","SnakeGame","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleBoardSizeChange","resetGame","handleGameSpeedChange","directionOnNextTick","bind","assertThisInitialized","checkGameLoss","setControls","generateNewFood","checkFoodCollision","snakeCoords","snakeHeadCoords","game","clearInterval","snakeInterval","foodCoords","Math","floor","random","_this2","document","addEventListener","keyCode","setInterval","score","highScore","slider_Slider","connect","dispatch","bindActionCreators","INITIAL_STATE","INITIAL_BOARD_SIZE","updateHighScore","_ref","rootReducer","combineReducers","state","arguments","undefined","action","objectSpread","concat","toConsumableArray","store","createStore","reducer","components_SnakeGame","SnakeGameProvider","es","SnakeGameProvider_SnakeGame","HomePage","handleClose","activeGame","setState","gameContainer","SnakeGameProvider_SnakeGameProvider","closeGame","App","homepage_HomePage","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a91ee28.chunk.js","sourcesContent":["export const INITIAL_BOARD_SIZE = 18;\nexport const MAX_BOARD_SIZE = 30;\nexport const MIN_BOARD_SIZE = 15;\nexport const MIN_GAME_SPEED = 20;\nexport const MAX_GAME_SPEED = 100;\nexport const SQUARE_SIZE = 20;\nexport const INITIAL_DIRECTION  = 'DOWN';","import React from 'react';\nimport '../../../../styles/games/snake/snakeBoard.css';\nimport {SQUARE_SIZE} from '../constants/constants';\n\n\nexport default function Board(props) {\n\tlet board = [];\n\tfor(let x = 0; x < props.size; x++) {\n\t\tboard[x] = [];\n\t\tfor(let y = 0; y < props.size; y++) {\n\t\t\tboard[x][y] = '';\n\t\t}\n\t}\n\n\tlet style = {\n\t\twidth: SQUARE_SIZE,\n\t\theight: SQUARE_SIZE,\n\t};\n\n\treturn (\n\t\t<div className=\"snakeBoard\" align=\"centre\">\n\t\t\t{\n\t\t\t\tboard.map((row, column) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"snakeBoardRow\" key={column}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trow.map((cell, cellIndex) => <div className=\"snakeBoardCell\" style={style} key={cellIndex} />)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n}","import React from 'react';\nimport {SQUARE_SIZE} from \"../constants/constants\";\nimport '../../../../styles/games/snake/snakeBody.css';\n\nexport default function(props) {\n\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\tprops.coords.map((coords, index) => {\n                        const style = {\n                            left: coords[0] * SQUARE_SIZE + 'px',\n                            top: coords[1] * SQUARE_SIZE + 'px',\n                            background: props.lost ? 'darkred' : '',\n\t\t\t\t\t\t\t width: SQUARE_SIZE,\n\t\t\t\t\t\t\t height: SQUARE_SIZE,\n                        };\n                        return <div className=\"snakeBody\" style={style} key={index}/>\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n}","import React from 'react';\nimport { SQUARE_SIZE } from '../constants/constants';\nimport '../../../../styles/games/snake/food.css';\n\nexport default function(props) {\n\tlet style = {\n\t\tleft: props.coords[0] * SQUARE_SIZE + 'px',\n\t\ttop: props.coords[1] * SQUARE_SIZE + 'px',\n\t\twidth: SQUARE_SIZE,\n\t\theight: SQUARE_SIZE,\n\t}\n\n\treturn (\n\t\t<div className=\"snakeFood\" style={style} />\n\t);\n}","import React, { Component } from 'react';\r\nimport RangeSlider from 'react-rangeslider';\r\nimport 'react-rangeslider/lib/index.css'\r\nimport '../../styles/slider/slider.css';\r\n\r\nclass Slider extends Component {\r\n\r\n    handleChange = (value, e) => {\r\n        this.props.onChange(value);\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"sliderComponent\">\r\n                <div className=\"sliderLabel\">{this.props.label}</div>\r\n                <RangeSlider className=\"rangeSlider\" value={this.props.value}\r\n                        orientation=\"vertical\"\r\n                        min={this.props.minValue}\r\n                        max={this.props.maxValue}\r\n                        tooltip={false}\r\n                        onChange={this.handleChange}/>\r\n                <div className=\"sliderValue\">{this.props.value}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Slider;","export function moveSnake(snake) {\n\tconst direction = snake.direction;\n\tlet coords = snake.coords.slice();\n\tconst headCoords = coords[coords.length-1];\n\tconst headMap = {\n\t\tDOWN: [headCoords[0], headCoords[1]+1],\n\t\tUP: [headCoords[0], headCoords[1]-1],\n\t\tLEFT: [headCoords[0]-1, headCoords[1]],\n\t\tRIGHT: [headCoords[0]+1, headCoords[1]]\n\t};\n\n\tcoords.push(headMap[direction]);\n\tcoords.shift();\n\n\treturn {\n\t\ttype: 'MOVE_SNAKE',\n\t\tcoords: coords,\n\t}\n}\n\nexport function setFood(coords) {\n\treturn {\n\t\ttype: 'SET_FOOD',\n\t\tfood: coords\n\t}\n}\n\nexport function setDirection(direction) {\n\treturn {\n\t\ttype: 'SET_DIRECTION',\n\t\tdirection\n\t}\n}\n\nexport function prependSnake(coords) {\n\treturn {\n\t\ttype: 'PREPEND_SNAKE',\n\t\tcoords: coords\n\t}\n}\n\nexport function newGame() {\n\treturn {\n\t\ttype: 'NEW_GAME'\n\t}\n}\n\nexport function loseGame() {\n\treturn {\n\t\ttype: 'LOSE_GAME'\n\t}\n}\n\nexport function incrementScore() {\n    return {\n        type: 'INCREMENT_SCORE'\n    }\n}\n\nexport function changeBoardSize(size) {\n    return {\n        type: 'CHANGE_BOARD_SIZE',\n        boardSize: size\n    }\n}\n\nexport function changeGameSpeed(speed) {\n    return {\n        type: 'CHANGE_GAME_SPEED',\n        slider: speed,\n    }\n}","export function checkCollision(matchCoords, arrCoords) {\n\treturn arrCoords.some(coords => coords[0] === matchCoords[0] && coords[1] === matchCoords[1]);\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {INITIAL_DIRECTION, MAX_GAME_SPEED, MIN_GAME_SPEED, MIN_BOARD_SIZE, MAX_BOARD_SIZE} from '../constants/constants';\nimport Board from './SnakeBoard';\nimport Snake from './SnakeBody';\nimport Food from './Food';\nimport Slider from '../../../slider/Slider';\nimport { moveSnake, setFood, setDirection, prependSnake, newGame, loseGame, incrementScore, changeBoardSize, changeGameSpeed } from '../actions/actions';\nimport { checkCollision } from '../utils/index';\nimport '../../../../styles/games/snake/snake.css';\n\nclass SnakeGame extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.directionOnNextTick = INITIAL_DIRECTION;\n\t\tthis.resetGame = this.resetGame.bind(this);\n\t\tthis.checkGameLoss = this.checkGameLoss.bind(this);\n\t\tthis.handleBoardSizeChange = this.handleBoardSizeChange.bind(this);\n\t\tthis.handleGameSpeedChange = this.handleGameSpeedChange.bind(this);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.setControls();\n\t\tthis.generateNewFood();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.checkFoodCollision();\n\t\tthis.checkGameLoss();\n\t}\n\n\tcheckGameLoss() {\n\t\tconst snakeCoords = this.props.snake.coords;\n\t\tconst snakeHeadCoords = snakeCoords[snakeCoords.length-1];\n\n\t\t// if you collide w a wall or yourself\n\t\tif(!this.props.game.lost && (\n\t\t\t\tsnakeHeadCoords[0] === -1 || \n\t\t\t\tsnakeHeadCoords[0] === this.props.slider.boardSize ||\n\t\t\t\tsnakeHeadCoords[1] === -1 || \n\t\t\t\tsnakeHeadCoords[1] === this.props.slider.boardSize ||\n\t\t\t\tcheckCollision(snakeHeadCoords, snakeCoords.slice(0, -1)))) {\n\t\t\tclearInterval(this.snakeInterval);\n\t\t\tthis.props.loseGame();\n\t\t}\n\t}\n\n\tcheckFoodCollision() {\n\t\tconst snakeCoords = this.props.snake.coords;\n\t\tconst snakeHeadCoords = snakeCoords[snakeCoords.length-1];\n\t\tconst foodCoords = this.props.food;\n\n\t\t// if it ate a piece of food\n\t\tif(snakeHeadCoords[0] === foodCoords[0] && snakeHeadCoords[1] === foodCoords[1]) {\n\t\t\tthis.generateNewFood();\n\t\t\tthis.props.incrementScore();\n\t\t\tthis.props.prependSnake(snakeCoords[snakeCoords.length-1].slice());\n\t\t}\n\t}\n\n\tresetGame() {\n\t\tthis.props.newGame();\n\t\tthis.generateNewFood();\n\t\tclearInterval(this.snakeInterval);\n\t\tthis.directionOnNextTick = 'DOWN';\n\t}\n\n\tgenerateNewFood() {\n\t\tconst x = Math.floor(Math.random() * this.props.slider.boardSize);\n\t\tconst y = Math.floor(Math.random() * this.props.slider.boardSize);\n\t\tif(checkCollision([x, y], this.props.snake.coords)) this.generateNewFood();\n\t\telse this.props.setFood([x, y]);\n\t}\n\n\tsetControls() {\n\t\tdocument.addEventListener('keydown', e => {\n\t\t    e.preventDefault();\n\t\t\tconst coords = this.props.snake.coords;\n\t\t\tconst x = coords[coords.length-1][0];\n\t\t\tconst y = coords[coords.length-1][1];\n\n\t\t\tswitch(e.keyCode) {\n\t\t\t\tcase 65: // A key\n\t\t\t\tcase 37: // left arrow\n\t\t\t\t\t// make sure we're not trying to move into the snake's body\n\t\t\t\t\t// or move outside the boundaries\n\t\t\t\t\tif(this.props.snake.direction !== 'RIGHT' && x !== 0) this.directionOnNextTick = 'LEFT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 68: // D key\n\t\t\t\tcase 39: // right arrow\n\t\t\t\t\tif(this.props.snake.direction !== 'LEFT' && x !== this.props.slider.boardSize - 1) this.directionOnNextTick = 'RIGHT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 83: // S key\n\t\t\t\tcase 40: // down arrow\n\t\t\t\t\tif(this.props.snake.direction !== 'UP' && y !== this.props.slider.boardSize - 1) this.directionOnNextTick = 'DOWN';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 87: // W key\n\t\t\t\tcase 38: // up arrow\n\t\t\t\t\tif(this.props.snake.direction !== 'DOWN' && y !== 0) this.directionOnNextTick = 'UP';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 32: // space\n\t\t\t\t\tif(this.props.game.lost) this.resetGame();\n\t\t\t\t\tclearInterval(this.snakeInterval);\n\t\t\t\t\tthis.snakeInterval = setInterval(() => {\n\t\t\t\t\t\tthis.props.setDirection(this.directionOnNextTick);\n\t\t\t\t\t\tthis.props.moveSnake(this.props.snake);\n\t\t\t\t\t}, this.props.slider.value);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// do nothing\n\t\t\t}\n\t\t});\n\t}\n\n\thandleBoardSizeChange = (value) => {\n\t\tthis.props.changeBoardSize(value);\n\t\tthis.resetGame();\n\t}\n\n\thandleGameSpeedChange = (value) => {\n\t    // value = value from slider (1 - 100)\n        // needs to be changed into the inverse\n        // 1 = fastest, 100 = slowest\n        const speed = MAX_GAME_SPEED - value;\n        this.props.changeGameSpeed(speed);\n\n        // this value needs to be changed before being passed into the slider.\n\t}\n\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div>\n                <h1 className=\"snakeTitle\">Snake</h1>\n\t\t\t\t<h1 className=\"snakeCurrentScore\">Score: {this.props.game.score}</h1>\n\t\t\t\t<h3 className=\"snakeHighScore\">High Score: {this.props.game.highScore}</h3>\n                <div className=\"snakeGame\">\n\n                    {/*<Slider className=\"sliderComponent\" onChange={this.handleBoardSizeChange}*/}\n                            {/*minValue={MIN_BOARD_SIZE}*/}\n                            {/*maxValue={MAX_BOARD_SIZE}*/}\n                            {/*label=\"Size\"*/}\n                            {/*value={this.props.slider.boardSize} />*/}\n\n                    <Slider className=\"sliderComponent\" onChange={this.handleGameSpeedChange}\n                            minValue={MIN_GAME_SPEED}\n                            maxValue={MAX_GAME_SPEED}\n                            label=\"Speed\"\n                            value={MAX_GAME_SPEED - this.props.slider.value}/>\n\n\t\t\t\t\t<div className=\"snakeBoardWrapper\">\n\t\t\t\t\t\t<Board size={this.props.slider.boardSize}/>\n\t\t\t\t\t\t<Snake coords={this.props.snake.coords} lost={this.props.game.lost} size={this.props.slider.boardSize}/>\n\t\t\t\t\t\t<Food coords={this.props.food} size={this.props.slider.boardSize} />\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<p className=\"snakeHelp\">Press spacebar to begin!</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(props) {\n\treturn props;\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n\t\tmoveSnake,\n\t\tsetFood,\n\t\tsetDirection,\n\t\tprependSnake,\n\t\tnewGame,\n        loseGame,\n\t\tincrementScore,\n\t\tchangeBoardSize,\n        changeGameSpeed,\n\t}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SnakeGame);\n","import { INITIAL_BOARD_SIZE, INITIAL_DIRECTION } from '../constants/constants';\n\nconst INITIAL_STATE = {\n\tdirection: INITIAL_DIRECTION,\n\tcoords: [\n\t\t[Math.floor(INITIAL_BOARD_SIZE/2), 0],\n\t\t[Math.floor(INITIAL_BOARD_SIZE/2), 1],\n\t\t[Math.floor(INITIAL_BOARD_SIZE/2), 2],\n\t]\n};\n\nexport default function(state = INITIAL_STATE, action) {\n\tswitch(action.type) {\n\t\tcase 'MOVE_SNAKE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcoords: action.coords\n\t\t\t}\n\n\t\tcase 'SET_DIRECTION':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdirection: action.direction\n\t\t\t}\n\n\t\tcase 'PREPEND_SNAKE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcoords: [[action.coords], ...state.coords]\n\t\t\t}\n\n\t\tcase 'NEW_GAME':\n\t\t\treturn {\n                direction: INITIAL_DIRECTION,\n                coords: [\n                    [Math.floor(INITIAL_BOARD_SIZE/2), 0],\n                    [Math.floor(INITIAL_BOARD_SIZE/2), 1],\n                    [Math.floor(INITIAL_BOARD_SIZE/2), 2],\n                ]\n\t\t\t};\n\t}\n\n\treturn state;\n}","const INITIAL_STATE = [];\n\nexport default function(state = INITIAL_STATE, action) {\n\tswitch(action.type) {\n\t\tcase 'SET_FOOD':\n\t\t\treturn action.food;\n\n\t\tcase 'NEW_GAME':\n\t\t\treturn INITIAL_STATE;\n\t}\n\treturn state;\n}","const INITIAL_STATE = {\n\tlost: false,\n\tscore: 0,\n\thighScore: 0,\n}\n\nfunction updateHighScore({ score, highScore }) {\n\treturn score > highScore ? score : highScore;\n}\n\nexport default function(state = INITIAL_STATE, action) {\n\tswitch(action.type) {\n\t\tcase 'LOSE_GAME':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlost: true,\n\t\t\t\thighScore: updateHighScore(state)\n\t\t\t}\n\t\tcase 'NEW_GAME':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tscore: 0,\n\t\t\t\tlost: false\n\t\t\t}\n\t\tcase 'INCREMENT_SCORE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tscore: state.score + 1\n\t\t\t}\n\t}\n\n\treturn state;\n}\n","import {MIN_GAME_SPEED, INITIAL_BOARD_SIZE} from \"../constants/constants\";\r\n\r\nconst INITIAL_STATE = {\r\n    value: MIN_GAME_SPEED,\r\n    boardSize: INITIAL_BOARD_SIZE,\r\n};\r\n\r\nexport default function(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE_GAME_SPEED':\r\n            return {\r\n                ...state,\r\n                value: action.slider\r\n            }\r\n\r\n        case 'CHANGE_BOARD_SIZE':\r\n            return {\r\n                ...state,\r\n                boardSize: action.boardSize\r\n            }\r\n\r\n    }\r\n    return state;\r\n}","import { combineReducers } from 'redux';\nimport snakeReducer from './snake-reducer';\nimport foodReducer from './food-reducer';\nimport gameReducer from './game-reducer';\nimport sliderReducer from './slider-reducer';\n\nconst rootReducer = combineReducers({\n\tsnake: snakeReducer,\n\tfood: foodReducer,\n\tgame: gameReducer,\n\tslider: sliderReducer,\n});\n\nexport default rootReducer;","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport Game from './SnakeGame';\r\nimport reducer from \"../reducers/reducers\";\r\nimport '../../../../styles/buttons/buttons.css';\r\n\r\nconst store = createStore(reducer);\r\n\r\nconst SnakeGame = () => {\r\n    return (\r\n        <div className=\"appSnake\">\r\n            <Game />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default class SnakeGameProvider extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Provider store={store} className=\"snakeGame\">\r\n                    <SnakeGame className=\"snake\"/>\r\n                </Provider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport Snake from '../games/snake/components/SnakeGameProvider';\r\nimport '../../styles/homepage/homepage.css';\r\nimport '../../styles/buttons/buttons.css';\r\nimport '../../styles/header/header.css';\r\n\r\nclass HomePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.state = {\r\n            activeGame: '',\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleClose() {\r\n        this.setState({activeGame: ''});\r\n    }\r\n\r\n\r\n    render() {\r\n        let gameContainer;\r\n            gameContainer = (\r\n                <div className=\"activeSnakeContainer\">\r\n                    <Snake className=\"snakeGame\" closeGame={this.handleClose}/>\r\n                </div>\r\n            )\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"snakeGameContainer\">\r\n                  {gameContainer}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\nimport './app.css';\nimport HomePage from './components/homepage/HomePage';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"app\">\n          <HomePage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}